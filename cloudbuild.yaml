steps:
# step 0 Upload to Cloud Storage.
- id: "Download"
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  args: ['gsutil', 'cp', 'gs://cache-psnext-v1-$BRANCH_NAME/*.tar.gz', '.']
# step 1  build
- id: "Build"
  waitFor:
    - "Download"
  name: 'gcr.io/$PROJECT_ID/psnextv1-builder'
  entrypoint: bash
  args:
    - -c
    - |
      pwd
      test -f ./nm.tar.gz && tar xzf nm.tar.gz
      test -f ./dist.tar.gz && tar xzf dist.tar.gz
      git fetch --depth=10
      # save the commit info & build date
      NOW=$(date +"%Y-%m-%d %T")
      echo "{\"branch\":\"$BRANCH_NAME\", \"commit\":\"$COMMIT_SHA\", \"repo\":\"$REPO_NAME\", \"buildtime\":\"$$NOW\", \"buildid\":\"$BUILD_ID\"}" > _buildinfo.js
      cat _buildinfo.js
      node --version
      docker --version
      npm i --quiet --no-progress
      git log --pretty=oneline
      # npm run nx -- run-many --target=build --all
      cat ./node_modules/LAST_BUILD_COMMIT_SHA
      npm run nx -- affected:build --base=$(cat ./node_modules/LAST_BUILD_COMMIT_SHA)  # rerun what is affected by the last commit in $BRANCH_NAME
# step 2 cache
- id: "Cache"
  name: 'gcr.io/$PROJECT_ID/psnextv1-builder'
  entrypoint: bash
  args:
    - -c
    - |
      echo -n $COMMIT_SHA > ./node_modules/LAST_BUILD_COMMIT_SHA
      cat ./node_modules/LAST_BUILD_COMMIT_SHA
      tar czf nm.tar.gz ./node_modules
      tar czf dist.tar.gz ./dist
      ls '*.tar.gz'
# step 3 Upload cache to Cloud Storage.
- id: "Upload"
  waitFor:
    - Cache
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  args: ['gsutil', 'cp', '*.tar.gz', 'gs://cache-psnext-v1-$BRANCH_NAME/']
timeout: 3600s
# options:
#   substitution_option: 'ALLOW_LOOSE'
# substitutions:
#   _LAST_BUILD_COMMIT_SHA: unknown
